/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*
        Name-Sayali Khade
        Id- 1001518264

*/
package dslab1;

import static dslab1.ChatClient.dis;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.text.SimpleDateFormat;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;
import java.util.logging.FileHandler;
import java.util.logging.SimpleFormatter;

/**
 *
 * @author sayal
 */

/* Building the code from lab 1 thereby citing the initial reference- Multithreaded chat application-client side code [5] */
/* code based on pseudo code from book for coordinator- reference [15] */
public class ChatCoordinator extends javax.swing.JFrame {
    
    final static int serverPort = 8080;
    static Socket csocket;
    static DataInputStream dis;
    static DataOutputStream dos;
    String participantMsg;
    String[] voteMsgs=new String[10];
    int i=0,j=0;
    int noofclients;
    static String msgs;
    int secondsLeft;
    int cnt=0;
    static String httpmsg="";
    Logger log1=Logger.getLogger("ChatCoordinator");
    FileHandler filehandler;
    
    
    public ChatCoordinator() {
        
        initComponents();
        
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        CoordinatorText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        EnterText = new javax.swing.JTextArea();
        send = new javax.swing.JButton();
        ClientLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        CoordinatorText.setEditable(false);
        CoordinatorText.setColumns(20);
        CoordinatorText.setRows(5);
        jScrollPane1.setViewportView(CoordinatorText);

        EnterText.setColumns(20);
        EnterText.setRows(5);
        jScrollPane2.setViewportView(EnterText);

        send.setText("Vote Request");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        ClientLabel.setText("Coordinator");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(ClientLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(send)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(ClientLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(send)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 /*Pseudo-code implementation of coordinator
         It sends the VOTE_REQUEST to all participants with the string for which they want  to vote_request
         It then starts it timer and waits for the response from the participant where it will be either
         commit or abort and then the corordinator will make a decision
         Also handles participant failing logic
        */
    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        // TODO add your handling code here:
  
            
            
 
            try {
                //log file for coordinator
                    //[13][14]
                        filehandler=new FileHandler("./Coordinator.log");
                        log1.addHandler(filehandler);
                        SimpleFormatter format=new SimpleFormatter();
                        filehandler.setFormatter(format);
                        //puts wait in log for coordinator log as it is waiting for participant response
                    //[13][14]
                        log1.info("WAIT");
                            //gets the string entered by user
                            String word = EnterText.getText().trim();
                            
                            //http format  [2]      
                            String  hdate=getServerTime();                    
                            String  initialResponseLine="POST /path/ChatClient/ HTTP/1.1 200 OK";
                            String contentType="text/plain";
                            String UserAgent="Java application";
                            httpmsg=(
                                    "\n"+ initialResponseLine+"\n" +
                                     "User Agent:\t"+UserAgent+"\n"+                                                             
                                     "Date:\t"+hdate+"\n"+
                                     "Content-Type:\t"+contentType+ "\n"+
                                     "Content-Length:\t"+word.length()+"\n"+
                                     "Message:\t");   
                            //writing the string alongwith vote_request on dos
                            dos=new DataOutputStream(csocket.getOutputStream());
                            dos.writeUTF(httpmsg+word+"\nVOTE_REQUEST"+"\n");	
                            EnterText.setText("");
                             
                            cnt=0;
                            //timer starts
                            //code for timer is reference from reference [7][8]
                            //pseudo code implemetation [15]
                            final Timer timer=new Timer();
                            //scheduling timer task for 20 secs
                            timer.scheduleAtFixedRate(new TimerTask() {
                                int countDown=20;
                            @Override
                            public void run() {
                           //printing timer values
                            System.out.print(countDown);
                             countDown--;
                            
                              try {
                                     //msgs=dis.readUTF();
                                     //if it recieves vote_abort from anyone participant it will send global_abort to dos and end timer
                                     if( msgs.contains("VOTE_ABORT"))
                                     {
                                     String amsg ="GLOBAL_ABORT";	
                                                try {
                                                // writing global_abort to dos 
                                                
                                                dos.writeUTF(httpmsg+amsg+"\n");
                                                  System.out.println("GLOBAL_ABORT");
                                                  //writing abort to dos
                                                      //[13][14]
                                                  log1.info(word+"ABORT");
                                                  //cancelling timer
                                                  timer.cancel();
                                                } catch (IOException ex) {
                                                    Logger.getLogger(ChatCoordinator.class.getName()).log(Level.SEVERE, null, ex);
                                                }
                                     }
                                     //if it recieves Vote_COMMIT from participants it will increment cnt by 1 and add in log commit
                                     //[15]
                                     
                                     else if(msgs.contains("VOTE_COMMIT"))
                                     {
                                         msgs="";
                                         cnt++;
                                         //add commit to log
                                         log1.info(word+"COMMIT");
                                     }                         
                                  } 
                              catch (Exception ex) {
                                      ex.printStackTrace();
                                     //Logger.getLogger(ChatCoordinator.class.getName()).log(Level.SEVERE, null, ex);
                              }
                        
                              //if it has received global_commit from all 3 participants then it coordinator will dos GLOBAL_COMMIT
                              //[15]
                              if(cnt==3)
                              {
                               String cmsg="GLOBAL_COMMIT";
                                    try {
                                           //dos global_commit in http format
                                            dos.writeUTF(httpmsg+cmsg+"\n");
                                              System.out.println(cmsg);
                                              timer.cancel();
                                              cnt=0;
                                        } catch (Exception ex) {
                                            ex.printStackTrace();
                                            //Logger.getLogger(ChatCoordinator.class.getName()).log(Level.SEVERE, null, ex);
                                        }
                                    }
                                    //if timed out coordinator [15]
                                            if(countDown<0)
                                       {
                                  try {
                                     //if coordinator recieves no response from any particpant then it send gloabl_abort to everyone
                                      dos.writeUTF(httpmsg+"GLOBAL_ABORT"+"\n");
                                      //add abort to log file
                                          //[13][14]
                                      log1.info(word+"ABORT");
                                      timer.cancel();
                                  } catch (IOException ex) {
                                      Logger.getLogger(ChatCoordinator.class.getName()).log(Level.SEVERE, null, ex);
                                  }
                                       }
                      
                        }
                            },0,1000);//end of timer
            
                        }
                        catch(Exception ex)
                        {
                            ex.printStackTrace();
                        }
            
                      
		
    }//GEN-LAST:event_sendActionPerformed
/*  INPUT - form window closing event
    It is putting logout on dos
    code for coordinator crash
    OUTPUT- coordinator crashes.
    */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            // TODO add your handling code here:
            dos.writeUTF("logout");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    /* INPUT - system date
       This function takes input as system date while sending message and converts it into HTTP format 
       date and time.
        OUTPUT - converts the system date into proper HTTP format
    [6]
    */
    static String getServerTime() {
            Calendar calendar = Calendar.getInstance();
            SimpleDateFormat dateFormat = new SimpleDateFormat(
                "EEE, dd MMM yyyy HH:mm:ss z", Locale.US);
            dateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
            return dateFormat.format(calendar.getTime());
} 
    /*
     * @param args the command line arguments
     */
    /*
        Reading all msgs with dis and then appending on its text 
        connecting coordinator to server socket
    
    */
    
    public static void main(String args[]) throws UnknownHostException, IOException  {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatCoordinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatCoordinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatCoordinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatCoordinator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        	
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatCoordinator().setVisible(true);
            }
        });
        
        
        //Reading data on client socket and displaying on clients text area [4][5]
       try{
                //coordinator socket connecting to server
    		csocket = new Socket(InetAddress.getByName("localhost"), serverPort);
                dos  = new DataOutputStream(csocket.getOutputStream());
		while(true) {
                    //reading msgs with dis
                        dis = new DataInputStream(csocket.getInputStream());
                        msgs = dis.readUTF();
			CoordinatorText.append(msgs);
                       
                       }  
        }catch(Exception e){
            //if cannot connect to socket error
                System.out.println("Cannot connect to socket");
           }
    }

   
 
        
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel ClientLabel;
    public static javax.swing.JTextArea CoordinatorText;
    private javax.swing.JTextArea EnterText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton send;
    // End of variables declaration//GEN-END:variables
}
/*
References:-


1.	“How to Append Text to an Existing File in Java?” Recalll, recalll.co/ask/v/topic/How-to-append-text-to-an-existing-file-in-Java/59f8df3a1126f45d1f8b5ebc.

2.	Marshall, James. “HTTP Made Really Easy.” HTTP Made Really Easy, 10 Dec. 2012, www.jmarshall.com/easy/http/#http1.1s3.

3.	Mkyong. “How to Calculate Date and Time Difference in Java.” How to Calculate Date and Time Difference in Java, 25 Jan. 2013, www.mkyong.com/java/how-to-calculate-date-time-difference-in-java/.

4.	Mahrsee, Rishabh. “Multi-Threaded Chat Application in Java | Set 1 (Server Side Programming).” GeeksforGeeks, 17 June 2017, www.geeksforgeeks.org/multi-threaded-chat-application-set-1/.

5.	Mahrsee, Rishabh. “Multi-Threaded Chat Application in Java | Set 2 (Client Side Programming).” GeeksforGeeks, 17 June 2017, www.geeksforgeeks.org/multi-threaded-chat-application-set-2/.

6.	R, Hannes. “Getting Date in HTTP Format in Java.” Stack Overflow, 27 Jan. 2015, 8:13, stackoverflow.com/questions/7707555/getting-date-in-http-format-in-java.

7.	“Custom Countdown Second Timer.” Java - Custom Countdown Second Timer - Code Review Stack Exchange, codereview.stackexchange.com/questions/118669/custom-countdown-second-timer.

8.	Oracle. “ Copyright (c) 2002, Oracle and/or Its Affiliates.” Moved, docs.oracle.com/javase/7/docs/technotes/guides/lang/Countdown.java.

9.	Jenkov, Jakob. “Java Regex - Matcher.” Jenkov.com, tutorials.jenkov.com/java-regex/matcher.html. ---group function

10.	Oracle. “Pattern.” Pattern (Java Platform SE 7 ), 19 Dec. 2017, docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html.

11.	Javatpoint. “Java Regex | Regular Expression - Javatpoint.” Www.javatpoint.com, www.javatpoint.com/java-regex.

12.	mkyong. “How to Read File in Java – BufferedReader.” How to Read File in Java – BufferedReader – Mkyong.com, 1 Dec. 2008, www.mkyong.com/java/how-to-read-file-from-java-bufferedreader-example/.

13.	Vogel, Lars. “Quick Links.” Vogella.com, 26 Sept. 2016, www.vogella.com/tutorials/Logging/article.html.

14.	Jenkov, Jakob. “Java Logging.” Jenkov.com, 23 June 2014, tutorials.jenkov.com/java-logging/index.html.

15.	Steen, Marteen Van, and Andrew S Tannenbaum. “Distributed Systems.” Distributed System Edition 3, 2017 (Distributed System Edition 3 Book mentioned in lab manual-Pg 487 and 488 pseudo commit of 2PC)


16.	mkyong. “How to Write to File in Java – BufferedWriter.” How to Write to File in Java – BufferedWriter – Mkyong.com, 2 June 2010, www.mkyong.com/java/how-to-write-to-file-in-java-bufferedwriter-example/.

*/